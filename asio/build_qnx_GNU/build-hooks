#!/bin/sh

#
#	Setup of essential configuration parameters
#
function hook_preconfigure {
#
# -DASIO_QNX  is used to solve the incompatibility issue of macros CMSG_SPACE() which is actually calls function __cmsg_alignbytes().
#        For the tests "fd_passing_stream_server" and "fd_passing_stream_client" it has to be pure pre-compile macros.
#
	CXXFLAGS="$CXXFLAGS -DASIO_HAS_PTHREADS -DASIO_HAS_STD_STRING_VIEW -DASIO_HAS_CONSTEXPR -DASIO_HAS_STD_FUTURE_CLASS -DASIO_QNX"

#
#	Add socket library
#
	LDFLAGS="$LDFLAGS -lsocket"

#
#	Distributive directory
#
	DIST_BASE="${PWD}/../.."

#
#	Setup correct pathes for install and build make commands
#
	configure_opts="--srcdir=${DIST_BASE}"
	configure_opts="${configure_opts} --prefix=${INSTALL_ROOT_nto}/usr"
	configure_opts="${configure_opts} --exec-prefix=${INSTALL_ROOT_nto}/${cpudir}/usr"
}

#
#	Adjust relative path to ./configure tool
#
function hook_configure {
    if [ -z "${ac_version}" ]; then
        unset _guess
        _pat='/[Gg]enerated.*[Aa]utoconf/s/.*\([1-9]\.[0-9][0-9]*\).*/\1/p'
        [ "${_guess}" ] || _guess=$(../../configure --version | sed -n -e "${_pat}")
        [ "${_guess}" ] || _guess=$(sed -n -e "1,10{
            ${_pat}
        }" <../../configure)
        AutoconfVersion ${_guess}
    fi
    ../../configure \
        ${ac_host:+"--host=${ac_host}"} \
        ${ac_build:+"--build=${ac_build}"} \
        ${configure_opts} \
        ${ac_params:+${CC:+"CC=${CC}"}} \
        ${ac_params:+${CFLAGS:+"CFLAGS=-O2 ${CFLAGS}"}} \
        ${ac_params:+${CPPFLAGS:+"CPPFLAGS=${CPPFLAGS}"}} \
        ${ac_params:+${LDFLAGS:+"LDFLAGS=${LDFLAGS}"}} \
        ${ac_params:+${CXX:+"CXX=${CXX}"}} \
        ${ac_params:+${CXXFLAGS:+"CXXFLAGS=-O2 ${CXXFLAGS}"}} \
        ${ac_params:+${ac_autotools:+${ac_autotools}}} \
        || Error "configure failed";
}

function hook_premake {
	if [ "${make_cmds}" == "check" ] && [ "${TARGET_SYSNAME}" == "nto" ]; then
		echo For target nto suppress tests execution.
		echo All tests have to be run on target system.
		make_opts="${make_opts} TESTS=''"
	fi
}
